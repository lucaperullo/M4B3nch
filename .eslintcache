[{"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\App.js":"1","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\AlbumPage.jsx":"2","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\ArtistCard.jsx":"3","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\SongCard.jsx":"4","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\HomeBody.jsx":"5","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\index.js":"6","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\CommentArea.jsx":"7","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\HomeNav.jsx":"8","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\AddComment.jsx":"9","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\SingleComment.jsx":"10","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\CommentList.jsx":"11"},{"size":528,"mtime":1606581625289,"results":"12","hashOfConfig":"13"},{"size":3888,"mtime":1606580699117,"results":"14","hashOfConfig":"13"},{"size":2521,"mtime":1606580944250,"results":"15","hashOfConfig":"13"},{"size":921,"mtime":1606581299743,"results":"16","hashOfConfig":"13"},{"size":362,"mtime":1606581514042,"results":"17","hashOfConfig":"13"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"13"},{"size":1357,"mtime":1606583107424,"results":"19","hashOfConfig":"13"},{"size":1010,"mtime":1606581318925,"results":"20","hashOfConfig":"13"},{"size":3942,"mtime":1606583091724,"results":"21","hashOfConfig":"13"},{"size":1815,"mtime":1606583150599,"results":"22","hashOfConfig":"13"},{"size":1006,"mtime":1606583218940,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jdkjx7",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\App.js",[],"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\AlbumPage.jsx",[],"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\ArtistCard.jsx",["49"],"import React from \"react\";\r\nimport { Col, Card, Alert, Spinner } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ArtistCard extends React.Component {\r\n  state = {\r\n    genre: 152,\r\n    artists: [],\r\n    loading: true,\r\n  };\r\n  componentDidMount = () => {\r\n    console.log(\"GENRE ON Mount IN ArtistCard\", this.props.genre);\r\n    this.setState({ genre: this.props.genre });\r\n    this.fetchArtists();\r\n  };\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (prevProps.genre !== this.props.genre) {\r\n      console.log(\"PREVIOUS GENRE IS DIFFERENT TO THIS ONE\");\r\n      this.setState({ genre: this.props.genre });\r\n      this.setState({ loading: true });\r\n      console.log(\"GENRE ON Update BEFORE FETCHING\", this.state.genre);\r\n      this.fetchArtists();\r\n      console.log(\"GENRE ON Update AFTER FETCHING\", this.state.genre);\r\n    }\r\n  };\r\n  fetchArtists = async (g) => {\r\n    let response = await fetch(\r\n      `https://deezerdevs-deezer.p.rapidapi.com/genre/` +\r\n        this.props.genre +\r\n        `/artists`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            \"b5adde9161msh8a1dcb5f94ec12fp19467bjsn5987880f6b6c\",\r\n          \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\r\n        },\r\n      }\r\n    );\r\n    let parsedResponse = await response.json();\r\n    this.setState({ artists: parsedResponse.data });\r\n    this.setState({ loading: false });\r\n    console.log(parsedResponse.data);\r\n  };\r\n  render() {\r\n    if (this.state.artists) {\r\n      if (this.state.loading === true) {\r\n        return (\r\n          <div className=\"w-100 text-center\" style={{ color: \"white\" }}>\r\n            Loading... <Spinner animation=\"border\" variant=\"primary\" />\r\n          </div>\r\n        );\r\n      } else {\r\n        return this.state.artists.map((artist, index) => (\r\n          <Col\r\n            xs={12}\r\n            sm={6}\r\n            lg={4}\r\n            xl={2}\r\n            key={index}\r\n            onClick={() => this.props.history.push(\"/artist/\" + artist.id)}\r\n          >\r\n            <Card>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={artist.picture_xl}\r\n                alt=\"artistImage\"\r\n              />\r\n              <Card.Body>\r\n                <Card.Text className=\"text-center\">{artist.name}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ));\r\n      }\r\n    } else {\r\n      return <h1>uh oh</h1>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(ArtistCard);\r\n",["50","51"],"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\SongCard.jsx",[],"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\HomeBody.jsx",[],"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\index.js",[],"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\CommentArea.jsx",["52","53"],"import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport AddComment from \"./AddComment\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nclass CommentArea extends React.Component {\r\n  state = {\r\n    comments: [],\r\n  };\r\n  componentDidMount = () => {\r\n    this.fetchComments();\r\n    console.log(\"fetching comments\");\r\n  };\r\n  fetchComments = async () => {\r\n    try {\r\n      let response = await fetch(\r\n        `https://striveschool-api.herokuapp.com/api/comments/${this.props.albumId}`,\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMyODMxZjk1YTU0MTAwMTc2ZTFhMmQiLCJpYXQiOjE2MDY1ODMwNzEsImV4cCI6MTYwNzc5MjY3MX0.SK0ZjJJP36C1pMQ3nh3ZE85_GUljO4haPUFyVTeYIHc\",\r\n          },\r\n        }\r\n      );\r\n      let comments = await response.json();\r\n      this.setState({ comments: comments });\r\n      console.log(this.state.comments);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Row>\r\n        {this.state.comments && (\r\n          <CommentList\r\n            comments={this.state.comments}\r\n            onFetch={this.fetchComments}\r\n          />\r\n        )}\r\n\r\n        <AddComment movieId={this.props.albumId} onFetch={this.fetchComments} />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentArea;\r\n","C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\HomeNav.jsx",[],"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\AddComment.jsx",[],"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\SingleComment.jsx",[],"C:\\Users\\lucap\\OneDrive\\Desktop\\Strive\\Repositories\\M4B3nch\\spotify-react\\src\\components\\CommentList.jsx",[],{"ruleId":"54","severity":1,"message":"55","line":2,"column":21,"nodeType":"56","messageId":"57","endLine":2,"endColumn":26},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"54","severity":1,"message":"62","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":13},{"ruleId":"54","severity":1,"message":"63","line":2,"column":15,"nodeType":"56","messageId":"57","endLine":2,"endColumn":24},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'Col' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]